---
import { getCollection } from "astro:content";

import Rebound from "@/components/Rebound.astro";
import GitHub from "@/components/GitHub.astro";

const pathname = new URL(Astro.request.url).pathname;

const articles = await getCollection("articles", ({ data }) => {
  return data.isDraft !== true;
});

const displayArticlesLink: boolean = articles.length > 0;
---

<header class="header">
  <div class="container">
    <div class="header__logo">
      <a href="/">
        <Rebound />
      </a>
    </div>
    <nav class="header__menu">
      {
        displayArticlesLink && (
          <a
            href="/articles/"
            aria-current={pathname.startsWith("/articles") ? "page" : false}
          >
            Articles
          </a>
        )
      }
      <a
        href="/support/"
        aria-current={pathname === "/support/" ? "page" : false}
      >
        Support
      </a>
      <a href="/support/#contact">Contact</a>
      <GitHub />
    </nav>
  </div>
</header>

<style lang="scss">
  .header {
    padding-top: var(--space-small);
    padding-bottom: var(--space-small);

    .container {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: space-between;
      gap: var(--space-medium);

      @media (width > 40rem) {
        flex-direction: row;
      }
    }

    &__logo {
      a {
        &:hover {
          text-decoration: none;
        }
      }
    }

    &__menu {
      display: flex;
      align-items: center;
      gap: 0.6rem;

      @media (min-width: 30rem) {
        gap: var(--space-small);
      }

      a:not([class]) {
        position: relative;

        padding: 0.3rem 0.8rem 0.6rem;

        border-radius: var(--border-radius-s);

        color: var(--text-color);

        &::after {
          content: "";

          position: absolute;
          top: calc(100% - 0.4rem);
          left: 0.8rem;

          display: block;
          height: 0.4rem;
          width: calc(100% - 1.6rem);

          border-radius: 0.2rem;
          background-color: transparent;

          transition: background-color 0.3s ease-in-out;
        }

        &:hover {
          text-decoration: none;

          &::after {
            background-color: var(--grey-500);
          }
        }

        &[aria-current="page"] {
          &::after {
            background-color: var(--accent-color);
          }
        }
      }
    }
  }
</style>
