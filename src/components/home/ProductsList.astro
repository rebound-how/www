---
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";

import Terminal from "@/components/Terminal.astro";

import ReliablyScreenshot from "@/assets/reliably-screenshot.png";

const lueurTerminal = `<span class="term-dim">$</span> lueur scenario run --scenario scenario.yaml

<span class="term-dim">================ Running Scenarios ================</span>

<span class="term-green">⡏</span>  4/4  Latency Increase By 30ms Steps From Downstream  <span class="term-green term-big">&#9646;</span><span class="term-green term-big">&#9646;</span><span class="term-green term-big">&#9646;</span><span class="term-red term-big">&#9646;</span>
<span class="term-green">⡏</span>  1/1  Within Allowed Latency While Bandwidth At 5 bytes/second  <span class="term-green term-big">&#9646;</span>
<span class="term-green">⡏</span>  1/1  Circuit Breaker Takes Care of 404  <span class="term-red term-big">&#9646;</span>
<span class="term-green">⡏</span>  1/1  Packet loss has no impact on service performance  <span class="term-green term-big">&#9646;</span>

<span class="term-dim">===================== Summary =====================</span>

Tests run: <span class="term-teal">7</span>, Tests failed: <span class="term-red">2</span>
Total time: 2.4s

Report saved as <span class="term-yellow">report.json</span>`;

const lueurTerm = `$ lueur scenario run --scenario scenario.yaml

================ Running Scenarios ================

⡏  4/4  Latency Increase By 30ms Steps From Downstream  &#9646;&#9646;&#9646;&#9646;
⡏  1/1  Within Allowed Latency While Bandwidth At 5 bytes/second  &#9646;
⡏  1/1  Circuit Breaker Takes Care of 404  &#9646;
⡏  1/1  Packet loss has no impact on service performance  &#9646;

===================== Summary =====================

Tests run: 7, Tests failed: 2
Total time: 2.4s

Report saved as report.json`;

const chaostoolkitTerminal = `<span class="term-dim">$</span> chaos run policy.json
<span class="term-green">[2025-03-04 15:23:27 INFO]</span> Validating the experiment's syntax
<span class="term-green">[2025-03-04 15:23:28 INFO]</span> Experiment looks valid
<span class="term-green">[2025-03-04 15:23:28 INFO]</span> Running experiment: Loss of pod capacity does not impact latency
<span class="term-green">[2025-03-04 15:23:28 INFO]</span> Steady-state strategy: after-method-only
<span class="term-green">[2025-03-04 15:23:28 INFO]</span> Rollbacks strategy: default 
<span class="term-green">[2025-03-04 15:23:28 INFO]</span> Playing your experiment's method now...
<span class="term-green">[2025-03-04 15:23:28 INFO]</span> Action: Run 5qps to home page for 60s [in background]
<span class="term-green">[2025-03-04 15:23:28 INFO]</span> Action: Delete application pod
<span class="term-green">[2025-03-04 15:23:28 INFO]</span> Action: Let it self-heal
<span class="term-green">[2025-03-04 15:23:28 INFO]</span> Pausing activity for 45s or until the execution is resumed
<span class="term-green">[2025-03-04 15:24:13 INFO]</span> Resuming execution...
<span class="term-green">[2025-03-04 15:24:28 INFO]</span> Steady state hypothesis: Steady-State Hypothesis
<span class="term-green">[2025-03-04 15:24:28 INFO]</span> Probe: Capacity is back to normal
<span class="term-green">[2025-03-04 15:24:28 INFO]</span> Probe: Latency was not impacted
<span class="term-red">[2025-03-04 15:24:28 CRITICAL]</span> Steady state probe 'Latency was not impacted' is not in the given tolerance
<span class="term-green">[2025-03-04 15:24:28 INFO]</span> Let's rollback...
<span class="term-green">[2025-03-04 15:24:28 INFO]</span> No declared rollbacks, let's move on.
<span class="term-green">[2025-03-04 15:24:28 INFO]</span> Experiment ended with status: deviated
<span class="term-green">[2025-03-04 15:24:28 INFO]</span> The steady-state has deviated, a weakness may have been discovered`;

const chaostoolkitTerm = `$ chaos run policy.json
[2025-03-04 15:23:27 INFO] Validating the experiment's syntax
[2025-03-04 15:23:28 INFO] Experiment looks valid
[2025-03-04 15:23:28 INFO] Running experiment: Loss of pod capacity does not impact latency
[2025-03-04 15:23:28 INFO] Steady-state strategy: after-method-only
[2025-03-04 15:23:28 INFO] Rollbacks strategy: default 
[2025-03-04 15:23:28 INFO] Playing your experiment's method now...
[2025-03-04 15:23:28 INFO] Action: Run 5qps to home page for 60s [in background]
[2025-03-04 15:23:28 INFO] Action: Delete application pod
[2025-03-04 15:23:28 INFO] Action: Let it self-heal
[2025-03-04 15:23:28 INFO] Pausing activity for 45s or until the execution is resumed
[2025-03-04 15:24:13 INFO] Resuming execution...
[2025-03-04 15:24:28 INFO] Steady state hypothesis: Steady-State Hypothesis
[2025-03-04 15:24:28 INFO] Probe: Capacity is back to normal
[2025-03-04 15:24:28 INFO] Probe: Latency was not impacted
[2025-03-04 15:24:28 CRITICAL] Steady state probe 'Latency was not impacted' is not in the given tolerance
[2025-03-04 15:24:28 INFO] Let's rollback...
[2025-03-04 15:24:28 INFO] No declared rollbacks, let's move on.
[2025-03-04 15:24:28 INFO] Experiment ended with status: deviated
[2025-03-04 15:24:28 INFO] The steady-state has deviated, a weakness may have been discovered`;
---

<section class="homeProducts homeSection">
  <header class="homeSectionHeader">
    <h2 class="text-center">Products</h2>
  </header>
  <div class="homeProducts__list">
    <div class="productWrapper container">
      <article class="product" style="--shadow-color: 240, 141, 54;">
        <header class="product__header">
          <h3>
            <span class="screen-reader-text">Lueur</span>
            <Icon name="lueur" />
          </h3>
          <p>Developer-Friendly Reliability</p>
        </header>
        <div class="product__content">
          <ul class="productInfo list-reset">
            <li class="productInfo__item">
              <Icon name="feather/zap" />
              <h4>Lightning-Fast</h4>
              <p>
                A Rust-powered CLI that simulates network disruptions right on
                your local machine.
              </p>
            </li>
            <li class="productInfo__item">
              <Icon name="feather/layers" />
              <h4>Real-World Scenarios</h4>
              <p>
                Easily configure tests via YAML to mimic latencies, bandwidth
                constraints, packet loss, and HTTP errors.
              </p>
            </li>
            <li class="productInfo__item">
              <Icon name="feather/truck" />
              <h4>CI Integration</h4>
              <p>
                Automatically run these tests within your pipeline and receive
                detailed, actionable reports.
              </p>
            </li>
          </ul>
          <div
            class="productMedia"
            id="lueurTerm"
            data-show-when="has-highlight-support"
          >
            <Terminal content={lueurTerm} />
          </div>
          <div class="productMedia" data-show-when="no-highlight-support">
            <Terminal content={lueurTerminal} />
          </div>
        </div>
        <div class="product__link">
          <a
            href="https://lueur.dev/"
            class="button button--primary">Read the docs</a
          >
        </div>
      </article>
    </div>
    <div class="productWrapper container">
      <article class="product" style="--shadow-color: 243, 182, 70;">
        <header class="product__header">
          <h3>
            <span class="screen-reader-text">Chaos Toolkit</span>
            <Icon name="chaos-toolkit" />
          </h3>
          <p>Reliability Policies in Action</p>
        </header>
        <div class="product__content">
          <ul class="productInfo list-reset">
            <li class="productInfo__item">
              <Icon name="feather/activity" />
              <h4>Executable Policies</h4>
              <p>
                Convert your resilience objectives into clear, measurable tests.
              </p>
            </li>
            <li class="productInfo__item">
              <Icon name="feather/bell" />
              <h4>Clear Feedback</h4>
              <p>
                Gain actionable insights that let you address vulnerabilities
                before they escalate.
              </p>
            </li>
            <li class="productInfo__item">
              <Icon name="feather/tool" />
              <h4>Fully Customizable</h4>
              <p>
                Cover all your systems, whether it's legacy, Cloud, On-Premise
                or "It's complicated", Rebound follows you.
              </p>
            </li>
          </ul>
          <div
            class="productMedia"
            id="chaostoolkitTerm"
            data-show-when="has-highlight-support"
          >
            <Terminal content={chaostoolkitTerm} />
          </div>
          <div class="productMedia" data-show-when="no-highlight-support">
            <Terminal content={chaostoolkitTerminal} />
          </div>
        </div>
        <div class="product__link">
          <a href="https://chaostoolkit.org/" class="button button--primary"
            >Read the docs</a
          >
        </div>
      </article>
    </div>
    <div class="productWrapper container">
      <article class="product" style="--shadow-color: 232, 62, 142;">
        <header class="product__header">
          <h3>
            <span class="screen-reader-text">Reliably</span>
            <Icon name="reliably" />
          </h3>
          <p>Orchestrate Your Resilience Strategy</p>
        </header>
        <div class="product__content product__content--reliably">
          <ul class="productInfo list-reset">
            <li class="productInfo__item">
              <Icon name="feather/crosshair" />
              <h4>Centralized Management</h4>
              <p>
                Coordinate and monitor resilience tests across your entire
                infrastructure from a single platform.
              </p>
            </li>
            <li class="productInfo__item">
              <Icon name="feather/eye" />
              <h4>Unified Visibility</h4>
              <p>
                Automatically map system health, track key resilience metrics,
                and identify improvement areas.
              </p>
            </li>
            <li class="productInfo__item">
              <Icon name="feather/hexagon" />
              <h4>AI-Powered Policies</h4>
              <p>
                Leverage GenAI to generate targeted tests and policies that
                evolve as your system does.
              </p>
            </li>
          </ul>
          <div class="productMedia">
            <Image
              src={ReliablyScreenshot}
              alt="A screenshot from the Reliably application. It shows an expriment with a summary of the last execution results and a breakdown of the different actions the experiment is made of."
            />
          </div>
        </div>
        <div class="product__link">
          <a
            href="https://gituhb.com/rebound-how/"
            class="button button--primary">Read the docs</a
          >
        </div>
      </article>
    </div>
  </div>
</section>

<style lang="scss">
  .homeProducts {
    --product-space: calc(2 * var(--space-large));

    h2 {
      margin-bottom: 0;

      color: var(--grey-100);
      font-size: clamp(6rem, 12vw, 12rem);
      text-shadow: var(--box-shadow-diffuse);
      text-transform: uppercase;
    }

    &__list {
      .productWrapper {
        display: grid;
        place-content: center;
        margin-top: var(--product-space);
        margin-bottom: var(--product-space);

        & + .productWrapper {
          padding-top: var(--product-space);
        }
      }

      .product {
        &__header {
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          gap: var(--space-small);
          margin-bottom: var(--space-large);

          h3 {
            margin-bottom: 0;

            svg {
              height: 6rem;
              width: auto;
            }
          }

          p {
            color: var(--text-color-dim);
            font-size: 2.4rem;
          }
        }

        &__content {
          display: grid;
          grid-template-columns: 1fr;
          overflow: hidden;

          background-color: white;
          border-radius: var(--border-radius-l);
          box-shadow: var(--box-shadow-diffuse);

          transition: all 0.3s ease-in 0.5s;

          &:hover {
            box-shadow:
              0 0.2rem 0.6rem rgba(var(--shadow-color), 0.025),
              0 0.4rem 0.8rem rgba(var(--shadow-color), 0.05),
              0 1.6rem 1.6rem rgba(var(--shadow-color), 0.08),
              0 1.6rem 4.8rem rgba(var(--shadow-color), 0.1);

            transition: all 0.3s ease-in;

            .productInfo__item {
              svg {
                color: rgba(var(--shadow-color), 1);

                transition: all 0.3s ease-in;
              }
            }
          }

          .productInfo {
            padding: var(--space-medium);

            > li + li {
              margin-top: var(--space-medium);
            }

            &__item {
              svg {
                height: 2.4rem;
                width: auto;

                color: var(--text-color-dim);

                transition: all 0.3s ease-in 0.5s;
              }

              h4 {
                margin-top: 0;
                margin-bottom: 0;
              }

              p {
                color: var(--text-color-dim);
              }
            }
          }

          .productMedia {
            height: 100%;
            min-width: 0;

            background-color: var(--grey-100);

            &:has(img) {
              display: grid;
              place-content: center;
            }

            img {
              display: block;
              height: auto;
              width: 100%;
            }
          }
        }

        &__link {
          display: flex;
          justify-content: center;
          margin-top: var(--space-medium);
        }
      }

      @media (width > 40rem) {
        .product__content {
          grid-template-columns: 1fr 1fr;
        }

        .product__content--reliably {
          grid-template-columns: 1fr;
        }

        .productWrapper:nth-child(2n) {
          .product__content {
            grid-template-columns: 1fr 1fr;

            .productInfo {
              grid-column-start: 2;
              grid-row-start: 1;
            }

            .productMedia {
              grid-column-start: 1;
              grid-row-start: 1;
            }
          }
        }
      }

      @media (width > 50rem) {
        .product__content {
          grid-template-columns: 1fr 2fr;
        }

        .productWrapper:nth-child(2n) {
          .product__content {
            grid-template-columns: 2fr 1fr;
          }
        }
      }
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    if (CSS.highlights) {
      document.body.classList.add("has-highlight-support");
    } else {
      document.body.classList.add("no-highlight-support");
    }
    const lueurTerm = document.getElementById("lueurTerm");
    const lueur = lueurTerm?.querySelector("pre");
    const ctkTerm = document.getElementById("chaostoolkitTerm");
    const ctk = ctkTerm?.querySelector("pre");

    const d = new Highlight();
    const g = new Highlight();
    const r = new Highlight();
    const t = new Highlight();
    const y = new Highlight();
    if (lueur) {
      const d0 = new Range();
      d0.setStart(lueur.firstChild!, 0);
      d0.setEnd(lueur.firstChild!, 1);
      d.add(d0);
      const d1 = new Range();
      d1.setStart(lueur.firstChild!, 47);
      d1.setEnd(lueur.firstChild!, 98);
      d.add(d1);
      const d2 = new Range();
      d2.setStart(lueur.firstChild!, 335);
      d2.setEnd(lueur.firstChild!, 386);
      d.add(d2);

      const g1 = new Range();
      g1.setStart(lueur.firstChild!, 100);
      g1.setEnd(lueur.firstChild!, 101);
      g.add(g1);
      const g2 = new Range();
      g2.setStart(lueur.firstChild!, 156);
      g2.setEnd(lueur.firstChild!, 159);
      g.add(g2);
      const g3 = new Range();
      g3.setStart(lueur.firstChild!, 161);
      g3.setEnd(lueur.firstChild!, 162);
      g.add(g3);
      const g4 = new Range();
      g4.setStart(lueur.firstChild!, 227);
      g4.setEnd(lueur.firstChild!, 228);
      g.add(g4);
      const g5 = new Range();
      g5.setStart(lueur.firstChild!, 229);
      g5.setEnd(lueur.firstChild!, 230);
      g.add(g5);
      const g6 = new Range();
      g6.setStart(lueur.firstChild!, 274);
      g6.setEnd(lueur.firstChild!, 275);
      g.add(g6);
      const g7 = new Range();
      g7.setStart(lueur.firstChild!, 332);
      g7.setEnd(lueur.firstChild!, 333);
      g.add(g7);

      const r1 = new Range();
      r1.setStart(lueur.firstChild!, 159);
      r1.setEnd(lueur.firstChild!, 160);
      r.add(r1);
      const r2 = new Range();
      r2.setStart(lueur.firstChild!, 272);
      r2.setEnd(lueur.firstChild!, 273);
      r.add(r2);
      const r3 = new Range();
      r3.setStart(lueur.firstChild!, 416);
      r3.setEnd(lueur.firstChild!, 417);
      r.add(r3);

      const t1 = new Range();
      t1.setStart(lueur.firstChild!, 399);
      t1.setEnd(lueur.firstChild!, 400);
      t.add(t1);

      const y1 = new Range();
      y1.setStart(lueur.firstChild!, 452);
      y1.setEnd(lueur.firstChild!, 463);
      y.add(y1);
    }

    if (ctk) {
      const d0 = new Range();
      d0.setStart(ctk.firstChild!, 0);
      d0.setEnd(ctk.firstChild!, 1);
      d.add(d0);
      const g1 = new Range();
      g1.setStart(ctk.firstChild!, 24);
      g1.setEnd(ctk.firstChild!, 50);
      g.add(g1);
      const g2 = new Range();
      g2.setStart(ctk.firstChild!, 86);
      g2.setEnd(ctk.firstChild!, 112);
      g.add(g2);
      const g3 = new Range();
      g3.setStart(ctk.firstChild!, 136);
      g3.setEnd(ctk.firstChild!, 162);
      g.add(g3);
      const g4 = new Range();
      g4.setStart(ctk.firstChild!, 228);
      g4.setEnd(ctk.firstChild!, 254);
      g.add(g4);
      const g5 = new Range();
      g5.setStart(ctk.firstChild!, 296);
      g5.setEnd(ctk.firstChild!, 322);
      g.add(g5);
      const g6 = new Range();
      g6.setStart(ctk.firstChild!, 352);
      g6.setEnd(ctk.firstChild!, 378);
      g.add(g6);
      const g7 = new Range();
      g7.setStart(ctk.firstChild!, 419);
      g7.setEnd(ctk.firstChild!, 445);
      g.add(g7);
      const g8 = new Range();
      g8.setStart(ctk.firstChild!, 500);
      g8.setEnd(ctk.firstChild!, 526);
      g.add(g8);
      const g9 = new Range();
      g9.setStart(ctk.firstChild!, 558);
      g9.setEnd(ctk.firstChild!, 584);
      g.add(g9);
      const g10 = new Range();
      g10.setStart(ctk.firstChild!, 610);
      g10.setEnd(ctk.firstChild!, 636);
      g.add(g10);
      const g11 = new Range();
      g11.setStart(ctk.firstChild!, 696);
      g11.setEnd(ctk.firstChild!, 722);
      g.add(g11);
      const g12 = new Range();
      g12.setStart(ctk.firstChild!, 745);
      g12.setEnd(ctk.firstChild!, 771);
      g.add(g12);
      const g13 = new Range();
      g13.setStart(ctk.firstChild!, 821);
      g13.setEnd(ctk.firstChild!, 847);
      g.add(g13);
      const g14 = new Range();
      g14.setStart(ctk.firstChild!, 882);
      g14.setEnd(ctk.firstChild!, 908);
      g.add(g14);
      const r15 = new Range();
      r15.setStart(ctk.firstChild!, 941);
      r15.setEnd(ctk.firstChild!, 971);
      r.add(r15);
      const g16 = new Range();
      g16.setStart(ctk.firstChild!, 1048);
      g16.setEnd(ctk.firstChild!, 1074);
      g.add(g16);
      const g17 = new Range();
      g17.setStart(ctk.firstChild!, 1093);
      g17.setEnd(ctk.firstChild!, 1119);
      g.add(g17);
      const g18 = new Range();
      g18.setStart(ctk.firstChild!, 1158);
      g18.setEnd(ctk.firstChild!, 1184);
      g.add(g18);
      const g19 = new Range();
      g19.setStart(ctk.firstChild!, 1224);
      g19.setEnd(ctk.firstChild!, 1250);
      g.add(g19);
    }

    CSS.highlights.set("dim", d);
    CSS.highlights.set("green", g);
    CSS.highlights.set("red", r);
    CSS.highlights.set("teal", t);
    CSS.highlights.set("yellow", y);
  });
</script>
