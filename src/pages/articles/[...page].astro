---
import { getCollection } from "astro:content";

import Layout from "@/layouts/Layout.astro";
import ArticleCard from "@/components/articles/ArticleCard.astro";

export async function getStaticPaths({ paginate }: { paginate: any }) {
  const articles = await getCollection("articles", ({ data }) => {
    return data.isDraft !== true;
  });

  return paginate(articles, { pageSize: 6 });
}

const { page } = Astro.props;
---

<Layout
  title="The open source resilience suite"
  description="Rebound is an open-source suite to make sure your users can rely on you"
>
  <main class="articles">
    <section class="articles container">
      <h1>Articles</h1>
      <ul class="articles__list list-reset">
        {
          page.data.map((article) => (
            <ArticleCard
              title={article.data.title}
              description={article.data.description}
              date={article.data.pubDate}
              cover={article.data.cover}
              coverAlt={article.data.coverAlt}
              coverCard={article.data.coverCard}
              url={`/articles/${article.id}`}
            />
          ))
        }
      </ul>
    </section>
  </main>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const cards = document.querySelectorAll(".articleCard");

    Array.prototype.forEach.call(cards, (card) => {
      let down: number,
        up: number,
        link = card.querySelector("h2 a");
      card.onmousedown = () => (down = +new Date());
      card.onmouseup = () => {
        up = +new Date();
        if (up - down < 200) {
          link.click();
        }
      };
    });
  });
</script>

<style lang="scss">
  .articles {
    padding-bottom: var(--space-large);

    &__list {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(30rem, 1fr));
      gap: var(--space-medium);
    }
  }
</style>
